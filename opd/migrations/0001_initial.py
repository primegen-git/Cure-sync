# Generated by Django 5.1 on 2025-08-28 13:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("user", "0018_alter_profile_profile_image"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Offline_Patient",
            fields=[
                ("name", models.CharField(max_length=200, verbose_name="Full Name")),
                ("age", models.PositiveIntegerField(verbose_name="Age")),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "male"), ("female", "female")],
                        max_length=10,
                        verbose_name="Gender",
                    ),
                ),
                ("email", models.EmailField(max_length=190, verbose_name="Email")),
                (
                    "profile_image",
                    models.ImageField(
                        default="profile/default-profile.png",
                        upload_to="profile/",
                        verbose_name="Image",
                    ),
                ),
                ("display_id", models.CharField(max_length=30, verbose_name="ID")),
                (
                    "phone_number",
                    models.CharField(max_length=10, verbose_name="Phone Number"),
                ),
                ("address", models.TextField(verbose_name="Address")),
                ("medical_history", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                ("name", models.CharField(max_length=200, verbose_name="Full Name")),
                (
                    "profile_image",
                    models.ImageField(
                        default="profile/default-profile.png",
                        upload_to="profile/",
                        verbose_name="Image",
                    ),
                ),
                (
                    "speciality",
                    models.CharField(max_length=200, verbose_name="Speciality"),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=10, verbose_name="Phone Number"),
                ),
                ("address", models.TextField(verbose_name="Address")),
                (
                    "experience",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Year of Experience"
                    ),
                ),
                ("about", models.TextField(blank=True)),
                ("education", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InventoryItem",
            fields=[
                ("name", models.CharField(max_length=50, verbose_name="Product Name")),
                (
                    "quantity",
                    models.PositiveIntegerField(default=0, verbose_name="Quantity"),
                ),
                ("price", models.FloatField(default=0, verbose_name="Price")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_items",
                        to="opd.inventory",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Inventory Items",
            },
        ),
        migrations.CreateModel(
            name="Opd",
            fields=[
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "no_of_beds",
                    models.PositiveIntegerField(default=0, verbose_name="No of Beds"),
                ),
                (
                    "no_of_appointment",
                    models.PositiveIntegerField(
                        default=0, verbose_name="No of Appointment"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "owner",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opd",
                        to="opd.doctor",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="inventory",
            name="opd",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inventory",
                to="opd.opd",
            ),
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "patient_type",
                    models.CharField(
                        choices=[
                            ("online", "Online Patient"),
                            ("offline", "Offline Patient"),
                        ],
                        max_length=10,
                        verbose_name="Patient Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("not_seen", "Not Seen"), ("seen", "Seen")],
                        default="not_seen",
                        max_length=10,
                        verbose_name="Status",
                    ),
                ),
                (
                    "appointment_id",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Appointment ID"
                    ),
                ),
                (
                    "appointment_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Appointment Date"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "patient_profile",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointment_profile",
                        to="user.profile",
                    ),
                ),
                (
                    "offline_patient",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="appointment_offline_patient",
                        to="opd.offline_patient",
                    ),
                ),
                (
                    "opd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="opd.opd",
                    ),
                ),
            ],
            options={
                "unique_together": {
                    ("opd", "offline_patient"),
                    ("opd", "patient_profile"),
                },
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "patient_type",
                    models.CharField(max_length=30, verbose_name="Patient Type"),
                ),
                (
                    "patient_id",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Patient ID"
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True, null=True)),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "total_bill",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Total Bill",
                    ),
                ),
                (
                    "billing_report",
                    models.TextField(null=True, verbose_name="Bill Report"),
                ),
                (
                    "next_appointment",
                    models.DateTimeField(
                        null=True, verbose_name="Next Appointment Date"
                    ),
                ),
                (
                    "bed_reservation",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Bed Reservation Hour"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "offline_patient",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="offline_patients",
                        to="opd.offline_patient",
                    ),
                ),
                (
                    "online_patient",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="online_patients",
                        to="user.profile",
                    ),
                ),
                (
                    "opd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patients",
                        to="opd.opd",
                    ),
                ),
            ],
            options={
                "unique_together": {("opd", "patient_id")},
            },
        ),
    ]
